version: "3.8"
services:
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile.backend
    container_name: backend
    volumes:
      - ./back:/app
    ports:
      - "8000:8000"
    environment:
      - DB_NAME=postgres_db
      - DB_USER=postgres_user
      - DB_PASSWORD=postgres_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_PORT=6380
    depends_on:
      - db
      - redis
    command:
      - /bin/sh
      - -c
      - |
        until pg_isready -h db -p 5432; do 
          echo 'Waiting for database...'
          sleep 5
        done
        echo 'Database is ready'
        python3 -m venv /app/venv
        . /app/venv/bin/activate
        /app/venv/bin/pip install -r /app/requirements.txt
        /app/venv/bin/python manage.py migrate
        echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('admin', 'admin@example.com', 'admin') if not User.objects.filter(username='admin').exists() else None" | /app/venv/bin/python manage.py shell
        /app/venv/bin/python manage.py runserver 0.0.0.0:8000

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile.frontend
    container_name: frontend
    volumes:
      - ./front:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    command:
      - /bin/sh
      - -c
      - |
        npm install && npm run dev

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: postgres_db
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6380:6379"
    command: ["redis-server"]

volumes:
  pgdata:
    driver: local