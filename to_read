* Front-end

--> hooks in react  
--> typescript and javascript
--> game logic
--> setInterval
--> usecontext

* Back-end

--> websockets
--> rides
--> channels
--> channel-layers
--> consumers
--> async
--> await
--> coroutine functions

TO DO:

--> up error in game console
--> front of the challenge loby (pandding)
--> end game data (pandding)